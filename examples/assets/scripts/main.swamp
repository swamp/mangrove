struct Logic {
    tick_count: Int,
}

impl Logic {
    fn tick(mut self) {
        self.tick_count = self.tick_count + 1

        if self.tick_count % 60 == 0 {
            print('tick: {self.tick_count}')
        }
    }

}

struct Render {
    flying_material_ref: mangrove::MaterialHandle,
}


impl Render {
    fn new(mut assets: mangrove::Assets) -> Render {
        flying_material_ref = assets.material_png('flying_46x30')

        Render {
            flying_material_ref: flying_material_ref,
        }
    }

    fn render(self, logic: Logic, mut gfx: mangrove::Gfx) {
        x = 100 + logic.tick_count % 60
        gfx.sprite(x, 100, 0, self.flying_material_ref)
    }
}

struct Audio {
}

impl Audio {
    fn audio(self, logic: Logic)  {
    }
}


fn main(mut assets: mangrove::Assets) -> (Logic, Render, Audio) {
    logic = Logic {
        tick_count: 0,
    }

    render = Render::new(assets)

    audio = Audio {

    }

    (logic, render, audio)
}
