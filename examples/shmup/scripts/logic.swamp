struct Logic {
    tick_count: Int, /// how many ticks have passed
    direction: Float, /// which direction the player ship
    x: Float, /// the x position of the player ship
}

impl Logic {

    /// Called by the mangrove engine every logic tick
    fn tick(mut self) {
        self.x = self.x + self.direction

        self.tick_count = self.tick_count + 1
        if self.tick_count % 60 == 0 {
            print('tick: {self.tick_count}')
        }
    }

    /// Called by the mangrove egine when a gamepad axis changes
    fn gamepad_axis_changed(mut self, gamepad: Int, axis: input::Axis, value: Float) {
        match axis {
            LeftStickX => self.direction = value * 4.0,
            _ => print('not handled axis: {axis} value: {value}'),
        }
    }

}

/// Called by the mangrove engine at startup
fn main() -> Logic {
    Logic {
        tick_count: 0,
        direction: 0.0,
        x: 0.0,
    }
}
